{"ast":null,"code":"import { BehaviorSubject } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nexport class WorkService {\n  worksSubject = new BehaviorSubject([]);\n  works$ = this.worksSubject.asObservable();\n  mockWorks = [{\n    id: 1,\n    title: \"Sistema de Gestión Universitaria\",\n    author: \"Juan Pérez\",\n    career: \"Ing. Desarrollo de Software\",\n    subject: \"Programación Web\",\n    semester: \"8vo\",\n    summary: \"Sistema completo para gestión académica\",\n    status: \"approved\",\n    date: \"2024-01-15\",\n    createdAt: new Date(\"2024-01-15\"),\n    updatedAt: new Date(\"2024-01-15\")\n  }, {\n    id: 2,\n    title: \"Análisis Forestal Sostenible\",\n    author: \"María García\",\n    career: \"Ing. Forestal\",\n    subject: \"Ecología Forestal\",\n    semester: \"6to\",\n    summary: \"Estudio sobre sostenibilidad forestal\",\n    status: \"pending\",\n    date: \"2024-01-14\",\n    createdAt: new Date(\"2024-01-14\"),\n    updatedAt: new Date(\"2024-01-14\")\n  }, {\n    id: 3,\n    title: \"Plan de Marketing Turístico\",\n    author: \"Carlos López\",\n    career: \"Lic. Administración Turística\",\n    subject: \"Marketing Turístico\",\n    semester: \"7mo\",\n    summary: \"Estrategias de marketing para destinos turísticos\",\n    status: \"rejected\",\n    date: \"2024-01-13\",\n    createdAt: new Date(\"2024-01-13\"),\n    updatedAt: new Date(\"2024-01-13\")\n  }];\n  constructor() {\n    this.worksSubject.next(this.mockWorks);\n  }\n  getWorks() {\n    return this.works$;\n  }\n  getWorkStats() {\n    return new BehaviorSubject({\n      total: 248,\n      approved: 195,\n      pending: 42,\n      rejected: 11\n    }).asObservable();\n  }\n  getWorksByCareer() {\n    return new BehaviorSubject([{\n      career: \"Ing. Software\",\n      approved: 45,\n      pending: 12,\n      rejected: 3\n    }, {\n      career: \"Ing. Forestal\",\n      approved: 32,\n      pending: 8,\n      rejected: 2\n    }, {\n      career: \"Lic. Turística\",\n      approved: 28,\n      pending: 6,\n      rejected: 1\n    }, {\n      career: \"Lic. Biología\",\n      approved: 35,\n      pending: 9,\n      rejected: 2\n    }, {\n      career: \"Lic. C. Ambientales\",\n      approved: 25,\n      pending: 5,\n      rejected: 1\n    }]).asObservable();\n  }\n  updateWorkStatus(workId, status) {\n    const works = this.worksSubject.value;\n    const workIndex = works.findIndex(w => w.id === workId);\n    if (workIndex !== -1) {\n      works[workIndex].status = status;\n      works[workIndex].updatedAt = new Date();\n      this.worksSubject.next([...works]);\n    }\n  }\n  static ɵfac = function WorkService_Factory(t) {\n    return new (t || WorkService)();\n  };\n  static ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: WorkService,\n    factory: WorkService.ɵfac,\n    providedIn: \"root\"\n  });\n}","map":{"version":3,"names":["BehaviorSubject","WorkService","worksSubject","works$","asObservable","mockWorks","id","title","author","career","subject","semester","summary","status","date","createdAt","Date","updatedAt","constructor","next","getWorks","getWorkStats","total","approved","pending","rejected","getWorksByCareer","updateWorkStatus","workId","works","value","workIndex","findIndex","w","factory","ɵfac","providedIn"],"sources":["C:\\Users\\albaa\\OneDrive\\Escritorio\\academic-works-system\\src\\app\\services\\work.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\"\nimport { BehaviorSubject, type Observable } from \"rxjs\"\nimport type { Work, WorkStats } from \"../models/work.model\"\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class WorkService {\n  private worksSubject = new BehaviorSubject<Work[]>([])\n  public works$ = this.worksSubject.asObservable()\n\n  private mockWorks: Work[] = [\n    {\n      id: 1,\n      title: \"Sistema de Gestión Universitaria\",\n      author: \"Juan Pérez\",\n      career: \"Ing. Desarrollo de Software\",\n      subject: \"Programación Web\",\n      semester: \"8vo\",\n      summary: \"Sistema completo para gestión académica\",\n      status: \"approved\",\n      date: \"2024-01-15\",\n      createdAt: new Date(\"2024-01-15\"),\n      updatedAt: new Date(\"2024-01-15\"),\n    },\n    {\n      id: 2,\n      title: \"Análisis Forestal Sostenible\",\n      author: \"María García\",\n      career: \"Ing. Forestal\",\n      subject: \"Ecología Forestal\",\n      semester: \"6to\",\n      summary: \"Estudio sobre sostenibilidad forestal\",\n      status: \"pending\",\n      date: \"2024-01-14\",\n      createdAt: new Date(\"2024-01-14\"),\n      updatedAt: new Date(\"2024-01-14\"),\n    },\n    {\n      id: 3,\n      title: \"Plan de Marketing Turístico\",\n      author: \"Carlos López\",\n      career: \"Lic. Administración Turística\",\n      subject: \"Marketing Turístico\",\n      semester: \"7mo\",\n      summary: \"Estrategias de marketing para destinos turísticos\",\n      status: \"rejected\",\n      date: \"2024-01-13\",\n      createdAt: new Date(\"2024-01-13\"),\n      updatedAt: new Date(\"2024-01-13\"),\n    },\n  ]\n\n  constructor() {\n    this.worksSubject.next(this.mockWorks)\n  }\n\n  getWorks(): Observable<Work[]> {\n    return this.works$\n  }\n\n  getWorkStats(): Observable<WorkStats> {\n    return new BehaviorSubject<WorkStats>({\n      total: 248,\n      approved: 195,\n      pending: 42,\n      rejected: 11,\n    }).asObservable()\n  }\n\n  getWorksByCareer(): Observable<any[]> {\n    return new BehaviorSubject([\n      { career: \"Ing. Software\", approved: 45, pending: 12, rejected: 3 },\n      { career: \"Ing. Forestal\", approved: 32, pending: 8, rejected: 2 },\n      { career: \"Lic. Turística\", approved: 28, pending: 6, rejected: 1 },\n      { career: \"Lic. Biología\", approved: 35, pending: 9, rejected: 2 },\n      { career: \"Lic. C. Ambientales\", approved: 25, pending: 5, rejected: 1 },\n    ]).asObservable()\n  }\n\n  updateWorkStatus(workId: number, status: \"approved\" | \"rejected\"): void {\n    const works = this.worksSubject.value\n    const workIndex = works.findIndex((w) => w.id === workId)\n    if (workIndex !== -1) {\n      works[workIndex].status = status\n      works[workIndex].updatedAt = new Date()\n      this.worksSubject.next([...works])\n    }\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}