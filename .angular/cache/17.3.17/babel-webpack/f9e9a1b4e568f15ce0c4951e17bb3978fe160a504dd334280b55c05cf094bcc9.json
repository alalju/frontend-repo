{"ast":null,"code":"import { inject } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { of } from \"rxjs\";\nimport { ConfigService } from \"./config.service\";\nimport * as i0 from \"@angular/core\";\nexport class AcademicoService {\n  http = inject(HttpClient);\n  config = inject(ConfigService);\n  get carrerasUrl() {\n    return this.config.carrerasService;\n  }\n  get materiasUrl() {\n    return this.config.materiasService;\n  }\n  // Obtener carreras desde microservicio acad√©mico\n  obtenerCarreras() {\n    console.log(\"üåê [ACADEMICO] GET Carreras:\", this.carrerasUrl);\n    // Si tienes el microservicio acad√©mico disponible:\n    // return this.http.get<CarreraDTO[]>(this.carrerasUrl)\n    // Mientras tanto, datos est√°ticos:\n    const carreras = [{\n      id: 1,\n      nombre: \"Ing. Desarrollo de Software\"\n    }, {\n      id: 2,\n      nombre: \"Ing. Forestal\"\n    }, {\n      id: 3,\n      nombre: \"Lic. Administraci√≥n Tur√≠stica\"\n    }, {\n      id: 4,\n      nombre: \"Lic. Biolog√≠a\"\n    }, {\n      id: 5,\n      nombre: \"Lic. Ciencias Ambientales\"\n    }];\n    return of(carreras);\n  }\n  // Obtener materias por carrera\n  obtenerMateriasPorCarrera(carreraId) {\n    const url = `${this.materiasUrl}/carrera/${carreraId}`;\n    console.log(\"üåê [ACADEMICO] GET Materias:\", url);\n    // Si tienes el microservicio acad√©mico disponible:\n    // return this.http.get<MateriaDTO[]>(url)\n    // Mientras tanto, datos est√°ticos:\n    const materiasPorCarrera = {\n      1: [{\n        id: 1,\n        nombre: \"Programaci√≥n Web\",\n        carreraId: 1\n      }, {\n        id: 2,\n        nombre: \"Base de Datos\",\n        carreraId: 1\n      }, {\n        id: 3,\n        nombre: \"Ingenier√≠a de Software\",\n        carreraId: 1\n      }, {\n        id: 4,\n        nombre: \"Desarrollo M√≥vil\",\n        carreraId: 1\n      }],\n      2: [{\n        id: 5,\n        nombre: \"Silvicultura\",\n        carreraId: 2\n      }, {\n        id: 6,\n        nombre: \"Manejo Forestal\",\n        carreraId: 2\n      }, {\n        id: 7,\n        nombre: \"Ecolog√≠a Forestal\",\n        carreraId: 2\n      }],\n      3: [{\n        id: 8,\n        nombre: \"Gesti√≥n Tur√≠stica\",\n        carreraId: 3\n      }, {\n        id: 9,\n        nombre: \"Marketing Tur√≠stico\",\n        carreraId: 3\n      }, {\n        id: 10,\n        nombre: \"Patrimonio Cultural\",\n        carreraId: 3\n      }]\n    };\n    return of(materiasPorCarrera[carreraId] || []);\n  }\n  // Obtener todas las materias\n  obtenerTodasLasMaterias() {\n    console.log(\"üåê [ACADEMICO] GET Todas las materias:\", this.materiasUrl);\n    return this.http.get(this.materiasUrl);\n  }\n  static …µfac = function AcademicoService_Factory(t) {\n    return new (t || AcademicoService)();\n  };\n  static …µprov = /*@__PURE__*/i0.…µ…µdefineInjectable({\n    token: AcademicoService,\n    factory: AcademicoService.…µfac,\n    providedIn: \"root\"\n  });\n}","map":{"version":3,"names":["inject","HttpClient","of","ConfigService","AcademicoService","http","config","carrerasUrl","carrerasService","materiasUrl","materiasService","obtenerCarreras","console","log","carreras","id","nombre","obtenerMateriasPorCarrera","carreraId","url","materiasPorCarrera","obtenerTodasLasMaterias","get","factory","…µfac","providedIn"],"sources":["C:\\Users\\albaa\\OneDrive\\Escritorio\\academic-works-system\\src\\app\\services\\academico.service.ts"],"sourcesContent":["import { Injectable, inject } from \"@angular/core\"\r\nimport { HttpClient } from \"@angular/common/http\"\r\nimport { type Observable, of } from \"rxjs\"\r\nimport { ConfigService } from \"./config.service\"\r\n\r\nexport interface CarreraDTO {\r\n  id: number\r\n  nombre: string\r\n}\r\n\r\nexport interface MateriaDTO {\r\n  id: number\r\n  nombre: string\r\n  carreraId: number\r\n}\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class AcademicoService {\r\n  private http: HttpClient = inject(HttpClient)\r\n  private config: ConfigService = inject(ConfigService)\r\n\r\n  private get carrerasUrl(): string {\r\n    return this.config.carrerasService\r\n  }\r\n\r\n  private get materiasUrl(): string {\r\n    return this.config.materiasService\r\n  }\r\n\r\n  // Obtener carreras desde microservicio acad√©mico\r\n  obtenerCarreras(): Observable<CarreraDTO[]> {\r\n    console.log(\"üåê [ACADEMICO] GET Carreras:\", this.carrerasUrl)\r\n\r\n    // Si tienes el microservicio acad√©mico disponible:\r\n    // return this.http.get<CarreraDTO[]>(this.carrerasUrl)\r\n\r\n    // Mientras tanto, datos est√°ticos:\r\n    const carreras: CarreraDTO[] = [\r\n      { id: 1, nombre: \"Ing. Desarrollo de Software\" },\r\n      { id: 2, nombre: \"Ing. Forestal\" },\r\n      { id: 3, nombre: \"Lic. Administraci√≥n Tur√≠stica\" },\r\n      { id: 4, nombre: \"Lic. Biolog√≠a\" },\r\n      { id: 5, nombre: \"Lic. Ciencias Ambientales\" },\r\n    ]\r\n    return of(carreras)\r\n  }\r\n\r\n  // Obtener materias por carrera\r\n  obtenerMateriasPorCarrera(carreraId: number): Observable<MateriaDTO[]> {\r\n    const url = `${this.materiasUrl}/carrera/${carreraId}`\r\n    console.log(\"üåê [ACADEMICO] GET Materias:\", url)\r\n\r\n    // Si tienes el microservicio acad√©mico disponible:\r\n    // return this.http.get<MateriaDTO[]>(url)\r\n\r\n    // Mientras tanto, datos est√°ticos:\r\n    const materiasPorCarrera: { [key: number]: MateriaDTO[] } = {\r\n      1: [\r\n        { id: 1, nombre: \"Programaci√≥n Web\", carreraId: 1 },\r\n        { id: 2, nombre: \"Base de Datos\", carreraId: 1 },\r\n        { id: 3, nombre: \"Ingenier√≠a de Software\", carreraId: 1 },\r\n        { id: 4, nombre: \"Desarrollo M√≥vil\", carreraId: 1 },\r\n      ],\r\n      2: [\r\n        { id: 5, nombre: \"Silvicultura\", carreraId: 2 },\r\n        { id: 6, nombre: \"Manejo Forestal\", carreraId: 2 },\r\n        { id: 7, nombre: \"Ecolog√≠a Forestal\", carreraId: 2 },\r\n      ],\r\n      3: [\r\n        { id: 8, nombre: \"Gesti√≥n Tur√≠stica\", carreraId: 3 },\r\n        { id: 9, nombre: \"Marketing Tur√≠stico\", carreraId: 3 },\r\n        { id: 10, nombre: \"Patrimonio Cultural\", carreraId: 3 },\r\n      ],\r\n    }\r\n\r\n    return of(materiasPorCarrera[carreraId] || [])\r\n  }\r\n\r\n  // Obtener todas las materias\r\n  obtenerTodasLasMaterias(): Observable<MateriaDTO[]> {\r\n    console.log(\"üåê [ACADEMICO] GET Todas las materias:\", this.materiasUrl)\r\n    return this.http.get<MateriaDTO[]>(this.materiasUrl)\r\n  }\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}