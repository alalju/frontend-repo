{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { FormsModule } from \"@angular/forms\";\nimport { BreadcrumbComponent } from \"../../shared/breadcrumb/breadcrumb.component\";\nlet UploadWorkComponent = class UploadWorkComponent {\n  trabajoService;\n  carreraService;\n  router;\n  breadcrumbItems = [{\n    label: \"Inicio\",\n    url: \"/\"\n  }, {\n    label: \"Dashboard\",\n    url: \"/student\"\n  }, {\n    label: \"Subir Trabajo\",\n    active: true\n  }];\n  workData = {\n    titulo: \"\",\n    carreraId: null,\n    materiaId: null,\n    semestre: null,\n    resumen: \"\",\n    usuarioId: 1 // Esto debería venir del servicio de autenticación\n  };\n  carreras = [];\n  materias = [];\n  semestres = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n  acceptTerms = false;\n  selectedFiles = {};\n  isLoading = false;\n  errorMessage = \"\";\n  successMessage = \"\";\n  constructor(trabajoService, carreraService, router) {\n    this.trabajoService = trabajoService;\n    this.carreraService = carreraService;\n    this.router = router;\n  }\n  ngOnInit() {\n    this.cargarCarreras();\n  }\n  cargarCarreras() {\n    this.carreraService.obtenerCarreras().subscribe({\n      next: carreras => {\n        this.carreras = carreras;\n      },\n      error: error => {\n        console.error(\"Error al cargar carreras:\", error);\n        this.errorMessage = \"Error al cargar las carreras disponibles\";\n      }\n    });\n  }\n  onCarreraChange() {\n    if (this.workData.carreraId) {\n      this.carreraService.obtenerMateriasPorCarrera(this.workData.carreraId).subscribe({\n        next: materias => {\n          this.materias = materias;\n          this.workData.materiaId = null; // Reset materia selection\n        },\n        error: error => {\n          console.error(\"Error al cargar materias:\", error);\n          this.materias = [];\n        }\n      });\n    } else {\n      this.materias = [];\n      this.workData.materiaId = null;\n    }\n  }\n  onFileSelected(event, type) {\n    const file = event.target.files[0];\n    if (file) {\n      // Validar tamaño del archivo (10MB máximo)\n      const maxSize = 10 * 1024 * 1024; // 10MB en bytes\n      if (file.size > maxSize) {\n        this.errorMessage = `El archivo ${file.name} excede el tamaño máximo de 10MB`;\n        event.target.value = \"\";\n        return;\n      }\n      // Validar tipo de archivo\n      if (type === \"pdf\" && file.type !== \"application/pdf\") {\n        this.errorMessage = \"Solo se permiten archivos PDF\";\n        event.target.value = \"\";\n        return;\n      }\n      if (type === \"source\" && ![\"application/zip\", \"application/x-rar-compressed\"].includes(file.type)) {\n        this.errorMessage = \"Solo se permiten archivos ZIP o RAR para el código fuente\";\n        event.target.value = \"\";\n        return;\n      }\n      this.selectedFiles[type] = file;\n      this.errorMessage = \"\"; // Limpiar mensaje de error\n    }\n  }\n  onSubmit() {\n    if (!this.acceptTerms || !this.selectedFiles.pdf) {\n      this.errorMessage = \"Por favor completa todos los campos requeridos\";\n      return;\n    }\n    this.isLoading = true;\n    this.errorMessage = \"\";\n    this.successMessage = \"\";\n    this.trabajoService.crearTrabajo(this.workData, this.selectedFiles.pdf, this.selectedFiles.source).subscribe({\n      next: response => {\n        this.isLoading = false;\n        this.successMessage = \"Trabajo subido exitosamente. Será revisado en los próximos días.\";\n        // Redirigir después de 2 segundos\n        setTimeout(() => {\n          this.router.navigate([\"/student/trabajos\"]);\n        }, 2000);\n      },\n      error: error => {\n        this.isLoading = false;\n        console.error(\"Error al subir trabajo:\", error);\n        if (error.status === 400) {\n          this.errorMessage = \"Datos inválidos. Por favor revisa el formulario.\";\n        } else if (error.status === 413) {\n          this.errorMessage = \"Los archivos son demasiado grandes.\";\n        } else {\n          this.errorMessage = \"Error al subir el trabajo. Por favor intenta nuevamente.\";\n        }\n      }\n    });\n  }\n  cancelar() {\n    this.router.navigate([\"/student\"]);\n  }\n};\nUploadWorkComponent = __decorate([Component({\n  selector: \"app-upload-work\",\n  standalone: true,\n  imports: [CommonModule, FormsModule, BreadcrumbComponent],\n  template: `\n    <div class=\"container-fluid\">\n      <!-- Breadcrumb -->\n      <app-breadcrumb [items]=\"breadcrumbItems\" class=\"mb-3\"></app-breadcrumb>\n      \n      <div class=\"row mb-4\">\n        <div class=\"col\">\n          <h2 class=\"display-6 fw-bold text-dark\">Subir Nuevo Trabajo</h2>\n          <p class=\"text-muted\">Completa el formulario para subir tu trabajo académico</p>\n        </div>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"col-lg-8\">\n          <div class=\"card\">\n            <div class=\"card-header bg-white\">\n              <h5 class=\"card-title mb-0\">Información del Trabajo</h5>\n              <small class=\"text-muted\">Todos los campos marcados con * son obligatorios</small>\n            </div>\n            <div class=\"card-body\">\n              <form (ngSubmit)=\"onSubmit()\" #workForm=\"ngForm\">\n                <div class=\"row\">\n                  <div class=\"col-md-6 mb-3\">\n                    <label for=\"titulo\" class=\"form-label\">Título del Trabajo *</label>\n                    <input \n                      type=\"text\" \n                      class=\"form-control\" \n                      id=\"titulo\"\n                      [(ngModel)]=\"workData.titulo\"\n                      name=\"titulo\"\n                      required\n                      placeholder=\"Ingresa el título de tu trabajo\">\n                  </div>\n                  \n                  <div class=\"col-md-6 mb-3\">\n                    <label for=\"carrera\" class=\"form-label\">Carrera *</label>\n                    <select \n                      class=\"form-select\" \n                      id=\"carrera\"\n                      [(ngModel)]=\"workData.carreraId\"\n                      name=\"carrera\"\n                      (change)=\"onCarreraChange()\"\n                      required>\n                      <option value=\"\">Selecciona tu carrera</option>\n                      <option *ngFor=\"let carrera of carreras\" [value]=\"carrera.id\">\n                        {{ carrera.nombre }}\n                      </option>\n                    </select>\n                  </div>\n                </div>\n\n                <div class=\"row\">\n                  <div class=\"col-md-6 mb-3\">\n                    <label for=\"materia\" class=\"form-label\">Materia</label>\n                    <select \n                      class=\"form-select\" \n                      id=\"materia\"\n                      [(ngModel)]=\"workData.materiaId\"\n                      name=\"materia\"\n                      [disabled]=\"!workData.carreraId\">\n                      <option value=\"\">Selecciona la materia</option>\n                      <option *ngFor=\"let materia of materias\" [value]=\"materia.id\">\n                        {{ materia.nombre }}\n                      </option>\n                    </select>\n                  </div>\n                  \n                  <div class=\"col-md-6 mb-3\">\n                    <label for=\"semestre\" class=\"form-label\">Semestre *</label>\n                    <select \n                      class=\"form-select\" \n                      id=\"semestre\"\n                      [(ngModel)]=\"workData.semestre\"\n                      name=\"semestre\"\n                      required>\n                      <option value=\"\">Selecciona el semestre</option>\n                      <option *ngFor=\"let sem of semestres\" [value]=\"sem\">\n                        {{ sem }}° Semestre\n                      </option>\n                    </select>\n                  </div>\n                </div>\n\n                <div class=\"mb-3\">\n                  <label for=\"resumen\" class=\"form-label\">Resumen del Trabajo *</label>\n                  <textarea \n                    class=\"form-control\" \n                    id=\"resumen\"\n                    [(ngModel)]=\"workData.resumen\"\n                    name=\"resumen\"\n                    rows=\"4\"\n                    required\n                    placeholder=\"Describe brevemente de qué trata tu trabajo (máximo 1000 caracteres)\"\n                    maxlength=\"1000\"></textarea>\n                  <div class=\"form-text\">{{ workData.resumen.length }}/1000 caracteres</div>\n                </div>\n\n                <!-- File Upload Section -->\n                <div class=\"mb-4\">\n                  <h6 class=\"fw-bold mb-3\">Archivos del Trabajo</h6>\n                  \n                  <!-- PDF Upload -->\n                  <div class=\"mb-3\">\n                    <label for=\"pdfFile\" class=\"form-label\">Documento PDF *</label>\n                    <div class=\"input-group\">\n                      <input \n                        type=\"file\" \n                        class=\"form-control\" \n                        id=\"pdfFile\"\n                        (change)=\"onFileSelected($event, 'pdf')\"\n                        accept=\".pdf\"\n                        required>\n                      <span class=\"input-group-text\">\n                        <i class=\"bi bi-file-pdf text-danger\"></i>\n                      </span>\n                    </div>\n                    <div class=\"form-text\">Archivo PDF del trabajo completo (máximo 10MB)</div>\n                    <div *ngIf=\"selectedFiles.pdf\" class=\"mt-2\">\n                      <small class=\"text-success\">\n                        <i class=\"bi bi-check-circle me-1\"></i>\n                        Archivo seleccionado: {{ selectedFiles.pdf.name }}\n                      </small>\n                    </div>\n                  </div>\n\n                  <!-- Source Code Upload -->\n                  <div class=\"mb-3\">\n                    <label for=\"sourceCode\" class=\"form-label\">Código Fuente (Opcional)</label>\n                    <div class=\"input-group\">\n                      <input \n                        type=\"file\" \n                        class=\"form-control\" \n                        id=\"sourceCode\"\n                        (change)=\"onFileSelected($event, 'source')\"\n                        accept=\".zip,.rar\">\n                      <span class=\"input-group-text\">\n                        <i class=\"bi bi-file-zip text-warning\"></i>\n                      </span>\n                    </div>\n                    <div class=\"form-text\">Archivo comprimido con el código fuente (máximo 10MB)</div>\n                    <div *ngIf=\"selectedFiles.source\" class=\"mt-2\">\n                      <small class=\"text-success\">\n                        <i class=\"bi bi-check-circle me-1\"></i>\n                        Archivo seleccionado: {{ selectedFiles.source.name }}\n                      </small>\n                    </div>\n                  </div>\n                </div>\n\n                <!-- Loading and Error Messages -->\n                <div *ngIf=\"isLoading\" class=\"mb-3\">\n                  <div class=\"d-flex align-items-center\">\n                    <div class=\"spinner-border spinner-border-sm text-success me-2\" role=\"status\">\n                      <span class=\"visually-hidden\">Cargando...</span>\n                    </div>\n                    <span>Subiendo trabajo...</span>\n                  </div>\n                </div>\n\n                <div *ngIf=\"errorMessage\" class=\"alert alert-danger\">\n                  <i class=\"bi bi-exclamation-triangle me-2\"></i>\n                  {{ errorMessage }}\n                </div>\n\n                <div *ngIf=\"successMessage\" class=\"alert alert-success\">\n                  <i class=\"bi bi-check-circle me-2\"></i>\n                  {{ successMessage }}\n                </div>\n\n                <!-- Terms and Conditions -->\n                <div class=\"mb-4\">\n                  <div class=\"form-check\">\n                    <input \n                      class=\"form-check-input\" \n                      type=\"checkbox\" \n                      id=\"terms\"\n                      [(ngModel)]=\"acceptTerms\"\n                      name=\"terms\"\n                      required>\n                    <label class=\"form-check-label\" for=\"terms\">\n                      Acepto los <a href=\"#\" class=\"text-success\">términos y condiciones</a> y confirmo que este trabajo es de mi autoría *\n                    </label>\n                  </div>\n                </div>\n\n                <!-- Submit Buttons -->\n                <div class=\"d-flex justify-content-end gap-2\">\n                  <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancelar()\">\n                    <i class=\"bi bi-x-circle me-2\"></i>\n                    Cancelar\n                  </button>\n                  <button \n                    type=\"submit\" \n                    class=\"btn btn-success\"\n                    [disabled]=\"!workForm.form.valid || !acceptTerms || isLoading || !selectedFiles.pdf\">\n                    <i class=\"bi bi-cloud-upload me-2\"></i>\n                    <span *ngIf=\"!isLoading\">Subir Trabajo</span>\n                    <span *ngIf=\"isLoading\">Subiendo...</span>\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n\n        <!-- Sidebar with Guidelines -->\n        <div class=\"col-lg-4\">\n          <div class=\"card\">\n            <div class=\"card-header bg-success text-white\">\n              <h6 class=\"card-title mb-0\">\n                <i class=\"bi bi-info-circle me-2\"></i>\n                Guía de Subida\n              </h6>\n            </div>\n            <div class=\"card-body\">\n              <h6 class=\"fw-bold\">Requisitos del Documento:</h6>\n              <ul class=\"list-unstyled\">\n                <li class=\"mb-2\">\n                  <i class=\"bi bi-check-circle text-success me-2\"></i>\n                  Formato PDF únicamente\n                </li>\n                <li class=\"mb-2\">\n                  <i class=\"bi bi-check-circle text-success me-2\"></i>\n                  Tamaño máximo: 10MB\n                </li>\n                <li class=\"mb-2\">\n                  <i class=\"bi bi-check-circle text-success me-2\"></i>\n                  Texto legible y bien estructurado\n                </li>\n                <li class=\"mb-2\">\n                  <i class=\"bi bi-check-circle text-success me-2\"></i>\n                  Incluir portada con datos completos\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  `,\n  styles: [`\n    .form-control:focus,\n    .form-select:focus {\n      border-color: #198754;\n      box-shadow: 0 0 0 0.2rem rgba(25, 135, 84, 0.25);\n    }\n    \n    .card {\n      box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);\n      border: none;\n    }\n  `]\n})], UploadWorkComponent);\nexport { UploadWorkComponent };","map":{"version":3,"names":["Component","CommonModule","FormsModule","BreadcrumbComponent","UploadWorkComponent","trabajoService","carreraService","router","breadcrumbItems","label","url","active","workData","titulo","carreraId","materiaId","semestre","resumen","usuarioId","carreras","materias","semestres","acceptTerms","selectedFiles","isLoading","errorMessage","successMessage","constructor","ngOnInit","cargarCarreras","obtenerCarreras","subscribe","next","error","console","onCarreraChange","obtenerMateriasPorCarrera","onFileSelected","event","type","file","target","files","maxSize","size","name","value","includes","onSubmit","pdf","crearTrabajo","source","response","setTimeout","navigate","status","cancelar","__decorate","selector","standalone","imports","template","styles"],"sources":["C:\\Users\\albaa\\OneDrive\\Escritorio\\academic-works-system\\src\\app\\components\\student\\upload-work\\upload-work.component.ts"],"sourcesContent":["import { Component, type OnInit } from \"@angular/core\"\r\nimport { CommonModule } from \"@angular/common\"\r\nimport { FormsModule } from \"@angular/forms\"\r\nimport type { Router } from \"@angular/router\"\r\nimport type { TrabajoService } from \"../services/trabajo.service\"\r\nimport type { CarreraService, CarreraDTO, MateriaDTO } from \"../services/carrera.service\"\r\nimport { BreadcrumbComponent, type BreadcrumbItem } from \"../../shared/breadcrumb/breadcrumb.component\"\r\n\r\n@Component({\r\n  selector: \"app-upload-work\",\r\n  standalone: true,\r\n  imports: [CommonModule, FormsModule, BreadcrumbComponent],\r\n  template: `\r\n    <div class=\"container-fluid\">\r\n      <!-- Breadcrumb -->\r\n      <app-breadcrumb [items]=\"breadcrumbItems\" class=\"mb-3\"></app-breadcrumb>\r\n      \r\n      <div class=\"row mb-4\">\r\n        <div class=\"col\">\r\n          <h2 class=\"display-6 fw-bold text-dark\">Subir Nuevo Trabajo</h2>\r\n          <p class=\"text-muted\">Completa el formulario para subir tu trabajo académico</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <div class=\"col-lg-8\">\r\n          <div class=\"card\">\r\n            <div class=\"card-header bg-white\">\r\n              <h5 class=\"card-title mb-0\">Información del Trabajo</h5>\r\n              <small class=\"text-muted\">Todos los campos marcados con * son obligatorios</small>\r\n            </div>\r\n            <div class=\"card-body\">\r\n              <form (ngSubmit)=\"onSubmit()\" #workForm=\"ngForm\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-6 mb-3\">\r\n                    <label for=\"titulo\" class=\"form-label\">Título del Trabajo *</label>\r\n                    <input \r\n                      type=\"text\" \r\n                      class=\"form-control\" \r\n                      id=\"titulo\"\r\n                      [(ngModel)]=\"workData.titulo\"\r\n                      name=\"titulo\"\r\n                      required\r\n                      placeholder=\"Ingresa el título de tu trabajo\">\r\n                  </div>\r\n                  \r\n                  <div class=\"col-md-6 mb-3\">\r\n                    <label for=\"carrera\" class=\"form-label\">Carrera *</label>\r\n                    <select \r\n                      class=\"form-select\" \r\n                      id=\"carrera\"\r\n                      [(ngModel)]=\"workData.carreraId\"\r\n                      name=\"carrera\"\r\n                      (change)=\"onCarreraChange()\"\r\n                      required>\r\n                      <option value=\"\">Selecciona tu carrera</option>\r\n                      <option *ngFor=\"let carrera of carreras\" [value]=\"carrera.id\">\r\n                        {{ carrera.nombre }}\r\n                      </option>\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-6 mb-3\">\r\n                    <label for=\"materia\" class=\"form-label\">Materia</label>\r\n                    <select \r\n                      class=\"form-select\" \r\n                      id=\"materia\"\r\n                      [(ngModel)]=\"workData.materiaId\"\r\n                      name=\"materia\"\r\n                      [disabled]=\"!workData.carreraId\">\r\n                      <option value=\"\">Selecciona la materia</option>\r\n                      <option *ngFor=\"let materia of materias\" [value]=\"materia.id\">\r\n                        {{ materia.nombre }}\r\n                      </option>\r\n                    </select>\r\n                  </div>\r\n                  \r\n                  <div class=\"col-md-6 mb-3\">\r\n                    <label for=\"semestre\" class=\"form-label\">Semestre *</label>\r\n                    <select \r\n                      class=\"form-select\" \r\n                      id=\"semestre\"\r\n                      [(ngModel)]=\"workData.semestre\"\r\n                      name=\"semestre\"\r\n                      required>\r\n                      <option value=\"\">Selecciona el semestre</option>\r\n                      <option *ngFor=\"let sem of semestres\" [value]=\"sem\">\r\n                        {{ sem }}° Semestre\r\n                      </option>\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"mb-3\">\r\n                  <label for=\"resumen\" class=\"form-label\">Resumen del Trabajo *</label>\r\n                  <textarea \r\n                    class=\"form-control\" \r\n                    id=\"resumen\"\r\n                    [(ngModel)]=\"workData.resumen\"\r\n                    name=\"resumen\"\r\n                    rows=\"4\"\r\n                    required\r\n                    placeholder=\"Describe brevemente de qué trata tu trabajo (máximo 1000 caracteres)\"\r\n                    maxlength=\"1000\"></textarea>\r\n                  <div class=\"form-text\">{{ workData.resumen.length }}/1000 caracteres</div>\r\n                </div>\r\n\r\n                <!-- File Upload Section -->\r\n                <div class=\"mb-4\">\r\n                  <h6 class=\"fw-bold mb-3\">Archivos del Trabajo</h6>\r\n                  \r\n                  <!-- PDF Upload -->\r\n                  <div class=\"mb-3\">\r\n                    <label for=\"pdfFile\" class=\"form-label\">Documento PDF *</label>\r\n                    <div class=\"input-group\">\r\n                      <input \r\n                        type=\"file\" \r\n                        class=\"form-control\" \r\n                        id=\"pdfFile\"\r\n                        (change)=\"onFileSelected($event, 'pdf')\"\r\n                        accept=\".pdf\"\r\n                        required>\r\n                      <span class=\"input-group-text\">\r\n                        <i class=\"bi bi-file-pdf text-danger\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <div class=\"form-text\">Archivo PDF del trabajo completo (máximo 10MB)</div>\r\n                    <div *ngIf=\"selectedFiles.pdf\" class=\"mt-2\">\r\n                      <small class=\"text-success\">\r\n                        <i class=\"bi bi-check-circle me-1\"></i>\r\n                        Archivo seleccionado: {{ selectedFiles.pdf.name }}\r\n                      </small>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <!-- Source Code Upload -->\r\n                  <div class=\"mb-3\">\r\n                    <label for=\"sourceCode\" class=\"form-label\">Código Fuente (Opcional)</label>\r\n                    <div class=\"input-group\">\r\n                      <input \r\n                        type=\"file\" \r\n                        class=\"form-control\" \r\n                        id=\"sourceCode\"\r\n                        (change)=\"onFileSelected($event, 'source')\"\r\n                        accept=\".zip,.rar\">\r\n                      <span class=\"input-group-text\">\r\n                        <i class=\"bi bi-file-zip text-warning\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <div class=\"form-text\">Archivo comprimido con el código fuente (máximo 10MB)</div>\r\n                    <div *ngIf=\"selectedFiles.source\" class=\"mt-2\">\r\n                      <small class=\"text-success\">\r\n                        <i class=\"bi bi-check-circle me-1\"></i>\r\n                        Archivo seleccionado: {{ selectedFiles.source.name }}\r\n                      </small>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <!-- Loading and Error Messages -->\r\n                <div *ngIf=\"isLoading\" class=\"mb-3\">\r\n                  <div class=\"d-flex align-items-center\">\r\n                    <div class=\"spinner-border spinner-border-sm text-success me-2\" role=\"status\">\r\n                      <span class=\"visually-hidden\">Cargando...</span>\r\n                    </div>\r\n                    <span>Subiendo trabajo...</span>\r\n                  </div>\r\n                </div>\r\n\r\n                <div *ngIf=\"errorMessage\" class=\"alert alert-danger\">\r\n                  <i class=\"bi bi-exclamation-triangle me-2\"></i>\r\n                  {{ errorMessage }}\r\n                </div>\r\n\r\n                <div *ngIf=\"successMessage\" class=\"alert alert-success\">\r\n                  <i class=\"bi bi-check-circle me-2\"></i>\r\n                  {{ successMessage }}\r\n                </div>\r\n\r\n                <!-- Terms and Conditions -->\r\n                <div class=\"mb-4\">\r\n                  <div class=\"form-check\">\r\n                    <input \r\n                      class=\"form-check-input\" \r\n                      type=\"checkbox\" \r\n                      id=\"terms\"\r\n                      [(ngModel)]=\"acceptTerms\"\r\n                      name=\"terms\"\r\n                      required>\r\n                    <label class=\"form-check-label\" for=\"terms\">\r\n                      Acepto los <a href=\"#\" class=\"text-success\">términos y condiciones</a> y confirmo que este trabajo es de mi autoría *\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n\r\n                <!-- Submit Buttons -->\r\n                <div class=\"d-flex justify-content-end gap-2\">\r\n                  <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancelar()\">\r\n                    <i class=\"bi bi-x-circle me-2\"></i>\r\n                    Cancelar\r\n                  </button>\r\n                  <button \r\n                    type=\"submit\" \r\n                    class=\"btn btn-success\"\r\n                    [disabled]=\"!workForm.form.valid || !acceptTerms || isLoading || !selectedFiles.pdf\">\r\n                    <i class=\"bi bi-cloud-upload me-2\"></i>\r\n                    <span *ngIf=\"!isLoading\">Subir Trabajo</span>\r\n                    <span *ngIf=\"isLoading\">Subiendo...</span>\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Sidebar with Guidelines -->\r\n        <div class=\"col-lg-4\">\r\n          <div class=\"card\">\r\n            <div class=\"card-header bg-success text-white\">\r\n              <h6 class=\"card-title mb-0\">\r\n                <i class=\"bi bi-info-circle me-2\"></i>\r\n                Guía de Subida\r\n              </h6>\r\n            </div>\r\n            <div class=\"card-body\">\r\n              <h6 class=\"fw-bold\">Requisitos del Documento:</h6>\r\n              <ul class=\"list-unstyled\">\r\n                <li class=\"mb-2\">\r\n                  <i class=\"bi bi-check-circle text-success me-2\"></i>\r\n                  Formato PDF únicamente\r\n                </li>\r\n                <li class=\"mb-2\">\r\n                  <i class=\"bi bi-check-circle text-success me-2\"></i>\r\n                  Tamaño máximo: 10MB\r\n                </li>\r\n                <li class=\"mb-2\">\r\n                  <i class=\"bi bi-check-circle text-success me-2\"></i>\r\n                  Texto legible y bien estructurado\r\n                </li>\r\n                <li class=\"mb-2\">\r\n                  <i class=\"bi bi-check-circle text-success me-2\"></i>\r\n                  Incluir portada con datos completos\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `,\r\n  styles: [\r\n    `\r\n    .form-control:focus,\r\n    .form-select:focus {\r\n      border-color: #198754;\r\n      box-shadow: 0 0 0 0.2rem rgba(25, 135, 84, 0.25);\r\n    }\r\n    \r\n    .card {\r\n      box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);\r\n      border: none;\r\n    }\r\n  `,\r\n  ],\r\n})\r\nexport class UploadWorkComponent implements OnInit {\r\n  breadcrumbItems: BreadcrumbItem[] = [\r\n    { label: \"Inicio\", url: \"/\" },\r\n    { label: \"Dashboard\", url: \"/student\" },\r\n    { label: \"Subir Trabajo\", active: true },\r\n  ]\r\n\r\n  workData = {\r\n    titulo: \"\",\r\n    carreraId: null as number | null,\r\n    materiaId: null as number | null,\r\n    semestre: null as number | null,\r\n    resumen: \"\",\r\n    usuarioId: 1, // Esto debería venir del servicio de autenticación\r\n  }\r\n\r\n  carreras: CarreraDTO[] = []\r\n  materias: MateriaDTO[] = []\r\n  semestres = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\r\n\r\n  acceptTerms = false\r\n  selectedFiles: { pdf?: File; source?: File } = {}\r\n\r\n  isLoading = false\r\n  errorMessage = \"\"\r\n  successMessage = \"\"\r\n\r\n  constructor(\r\n    private trabajoService: TrabajoService,\r\n    private carreraService: CarreraService,\r\n    private router: Router,\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.cargarCarreras()\r\n  }\r\n\r\n  cargarCarreras(): void {\r\n    this.carreraService.obtenerCarreras().subscribe({\r\n      next: (carreras) => {\r\n        this.carreras = carreras\r\n      },\r\n      error: (error) => {\r\n        console.error(\"Error al cargar carreras:\", error)\r\n        this.errorMessage = \"Error al cargar las carreras disponibles\"\r\n      },\r\n    })\r\n  }\r\n\r\n  onCarreraChange(): void {\r\n    if (this.workData.carreraId) {\r\n      this.carreraService.obtenerMateriasPorCarrera(this.workData.carreraId).subscribe({\r\n        next: (materias) => {\r\n          this.materias = materias\r\n          this.workData.materiaId = null // Reset materia selection\r\n        },\r\n        error: (error) => {\r\n          console.error(\"Error al cargar materias:\", error)\r\n          this.materias = []\r\n        },\r\n      })\r\n    } else {\r\n      this.materias = []\r\n      this.workData.materiaId = null\r\n    }\r\n  }\r\n\r\n  onFileSelected(event: any, type: \"pdf\" | \"source\"): void {\r\n    const file = event.target.files[0]\r\n    if (file) {\r\n      // Validar tamaño del archivo (10MB máximo)\r\n      const maxSize = 10 * 1024 * 1024 // 10MB en bytes\r\n      if (file.size > maxSize) {\r\n        this.errorMessage = `El archivo ${file.name} excede el tamaño máximo de 10MB`\r\n        event.target.value = \"\"\r\n        return\r\n      }\r\n\r\n      // Validar tipo de archivo\r\n      if (type === \"pdf\" && file.type !== \"application/pdf\") {\r\n        this.errorMessage = \"Solo se permiten archivos PDF\"\r\n        event.target.value = \"\"\r\n        return\r\n      }\r\n\r\n      if (type === \"source\" && ![\"application/zip\", \"application/x-rar-compressed\"].includes(file.type)) {\r\n        this.errorMessage = \"Solo se permiten archivos ZIP o RAR para el código fuente\"\r\n        event.target.value = \"\"\r\n        return\r\n      }\r\n\r\n      this.selectedFiles[type] = file\r\n      this.errorMessage = \"\" // Limpiar mensaje de error\r\n    }\r\n  }\r\n\r\n  onSubmit(): void {\r\n    if (!this.acceptTerms || !this.selectedFiles.pdf) {\r\n      this.errorMessage = \"Por favor completa todos los campos requeridos\"\r\n      return\r\n    }\r\n\r\n    this.isLoading = true\r\n    this.errorMessage = \"\"\r\n    this.successMessage = \"\"\r\n\r\n    this.trabajoService.crearTrabajo(this.workData, this.selectedFiles.pdf, this.selectedFiles.source).subscribe({\r\n      next: (response) => {\r\n        this.isLoading = false\r\n        this.successMessage = \"Trabajo subido exitosamente. Será revisado en los próximos días.\"\r\n\r\n        // Redirigir después de 2 segundos\r\n        setTimeout(() => {\r\n          this.router.navigate([\"/student/trabajos\"])\r\n        }, 2000)\r\n      },\r\n      error: (error) => {\r\n        this.isLoading = false\r\n        console.error(\"Error al subir trabajo:\", error)\r\n\r\n        if (error.status === 400) {\r\n          this.errorMessage = \"Datos inválidos. Por favor revisa el formulario.\"\r\n        } else if (error.status === 413) {\r\n          this.errorMessage = \"Los archivos son demasiado grandes.\"\r\n        } else {\r\n          this.errorMessage = \"Error al subir el trabajo. Por favor intenta nuevamente.\"\r\n        }\r\n      },\r\n    })\r\n  }\r\n\r\n  cancelar(): void {\r\n    this.router.navigate([\"/student\"])\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}